openapi: 3.1.0
info:
  title: Forkspacer API
  version: 1.0.0
  description: API for managing workspaces and modules in Forkspacer
servers:
  - url: /api/v1
    description: API v1
paths:
  /workspace/:
    post:
      summary: Create a new workspace
      operationId: createWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceRequest"
      responses:
        "201":
          description: Workspace created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Response"
                  - type: object
                    properties:
                      success:
                        allOf:
                          - $ref: "#/components/schemas/JSONSuccessResponse"
                          - type: object
                            properties:
                              code:
                                type: string
                                enum: [created]
                              data:
                                $ref: "#/components/schemas/WorkspaceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
    patch:
      summary: Update an existing workspace
      operationId: updateWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
      responses:
        "200":
          description: Workspace updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Response"
                  - type: object
                    properties:
                      success:
                        allOf:
                          - $ref: "#/components/schemas/JSONSuccessResponse"
                          - type: object
                            properties:
                              code:
                                type: string
                                enum: [ok]
                              data:
                                $ref: "#/components/schemas/WorkspaceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
    delete:
      summary: Delete a workspace
      operationId: deleteWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWorkspaceRequest"
      responses:
        "204":
          description: Workspace deleted successfully
        "400":
          $ref: "#/components/responses/BadRequest"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
  /workspace/list:
    get:
      summary: List workspaces
      operationId: listWorkspaces
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 250
            default: 25
        - name: continueToken
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of workspaces
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Response"
                  - type: object
                    properties:
                      success:
                        allOf:
                          - $ref: "#/components/schemas/JSONSuccessResponse"
                          - type: object
                            properties:
                              code:
                                type: string
                                enum: [ok]
                              data:
                                $ref: "#/components/schemas/ListWorkspacesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
  /workspace/connection/kubeconfig/:
    post:
      summary: Create a kubeconfig secret
      operationId: createKubeconfigSecret
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - kubeconfig
              properties:
                name:
                  type: string
                  description: DNS 1123 subdomain name
                  pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                  maxLength: 253
                kubeconfig:
                  type: string
                  format: binary
                  description: Kubeconfig file (max 10 MB)
      responses:
        "201":
          description: Kubeconfig secret created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Response"
                  - type: object
                    properties:
                      success:
                        allOf:
                          - $ref: "#/components/schemas/JSONSuccessResponse"
                          - type: object
                            properties:
                              code:
                                type: string
                                enum: [created]
                              data:
                                $ref: "#/components/schemas/KubeconfigSecretResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "413":
          $ref: "#/components/responses/FormDataTooLarge"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
    delete:
      summary: Delete a kubeconfig secret
      operationId: deleteKubeconfigSecret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteKubeconfigSecretRequest"
      responses:
        "204":
          description: Kubeconfig secret deleted successfully
        "400":
          $ref: "#/components/responses/BadRequest"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
  /workspace/connection/kubeconfig/list:
    get:
      summary: List kubeconfig secrets
      operationId: listKubeconfigSecrets
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 250
            default: 25
        - name: continueToken
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of kubeconfig secrets
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Response"
                  - type: object
                    properties:
                      success:
                        allOf:
                          - $ref: "#/components/schemas/JSONSuccessResponse"
                          - type: object
                            properties:
                              code:
                                type: string
                                enum: [ok]
                              data:
                                $ref: "#/components/schemas/ListKubeconfigSecretsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
  /module/:
    post:
      summary: Create a new module
      operationId: createModule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateModuleRequest"
      responses:
        "201":
          description: Module created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Response"
                  - type: object
                    properties:
                      success:
                        allOf:
                          - $ref: "#/components/schemas/JSONSuccessResponse"
                          - type: object
                            properties:
                              code:
                                type: string
                                enum: [created]
                              data:
                                $ref: "#/components/schemas/ModuleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
    patch:
      summary: Update an existing module
      operationId: updateModule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateModuleRequest"
      responses:
        "200":
          description: Module updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Response"
                  - type: object
                    properties:
                      success:
                        allOf:
                          - $ref: "#/components/schemas/JSONSuccessResponse"
                          - type: object
                            properties:
                              code:
                                type: string
                                enum: [ok]
                              data:
                                $ref: "#/components/schemas/ModuleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
    delete:
      summary: Delete a module
      operationId: deleteModule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteModuleRequest"
      responses:
        "204":
          description: Module deleted successfully
        "400":
          $ref: "#/components/responses/BadRequest"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
  /module/list:
    get:
      summary: List modules
      operationId: listModules
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 250
            default: 25
        - name: continueToken
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of modules
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Response"
                  - type: object
                    properties:
                      success:
                        allOf:
                          - $ref: "#/components/schemas/JSONSuccessResponse"
                          - type: object
                            properties:
                              code:
                                type: string
                                enum: [ok]
                              data:
                                $ref: "#/components/schemas/ListModulesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
components:
  schemas:
    Response:
      type: object
      properties:
        success:
          $ref: "#/components/schemas/JSONSuccessResponse"
        error:
          $ref: "#/components/schemas/JSONErrorResponse"
    JSONSuccessResponse:
      type: object
      required:
        - code
        - data
      properties:
        code:
          type: string
          enum: [ok, created, deleted]
        data: {}
    JSONErrorResponse:
      type: object
      required:
        - code
        - data
      properties:
        code:
          type: string
          enum:
            - internal_error
            - not_found
            - bad_request
            - unsupported_media_type
            - malformed_json_body
            - body_validation
            - query_validation
            - form_data_too_large
        data: {}
    WorkspaceResourceReference:
      type: object
      required:
        - name
        - namespace
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
    WorkspaceConnection:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [kubeconfig, in-cluster]
        secret:
          $ref: "#/components/schemas/WorkspaceResourceReference"
        key:
          type: string
          minLength: 1
          description: Key in the secret to retrieve. Defaults to "kubeconfig"
    WorkspaceAutoHibernation:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
        schedule:
          type: string
          description: Cron expression (required if enabled is true)
        wakeSchedule:
          type: string
          description: Cron expression
    ManagedCluster:
      type: object
      properties:
        backend:
          type: string
          enum: [vcluster, k3d, kind]
          default: vcluster
          description: Which cluster technology to use
        distro:
          type: string
          enum: [k3s, k0s, k8s, eks]
          default: k3s
          description: Kubernetes distribution (for vcluster)
    CreateWorkspaceRequest:
      type: object
      required:
        - name
        - connection
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
        type:
          type: string
          enum: [kubernetes, managed]
          default: kubernetes
          description: Workspace type
        from:
          $ref: "#/components/schemas/WorkspaceResourceReference"
        hibernated:
          type: boolean
        connection:
          $ref: "#/components/schemas/WorkspaceConnection"
        managedCluster:
          $ref: "#/components/schemas/ManagedCluster"
        autoHibernation:
          $ref: "#/components/schemas/WorkspaceAutoHibernation"
    UpdateWorkspaceRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
        hibernated:
          type: boolean
        autoHibernation:
          $ref: "#/components/schemas/WorkspaceAutoHibernation"
        managedCluster:
          $ref: "#/components/schemas/ManagedCluster"
    DeleteWorkspaceRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
    ListWorkspacesRequest:
      type: object
      properties:
        limit:
          type: integer
          format: int64
          minimum: 1
          maximum: 250
          default: 25
        continueToken:
          type: string
    WorkspaceResponse:
      type: object
      required:
        - name
        - namespace
      properties:
        name:
          type: string
        namespace:
          type: string
    WorkspaceListItem:
      type: object
      required:
        - name
        - namespace
        - phase
        - message
        - type
        - hibernated
      properties:
        name:
          type: string
        namespace:
          type: string
        phase:
          type: string
        message:
          type: string
        type:
          type: string
        hibernated:
          type: boolean
    ListWorkspacesResponse:
      type: object
      required:
        - continueToken
        - workspaces
      properties:
        continueToken:
          type: string
        workspaces:
          type: array
          items:
            $ref: "#/components/schemas/WorkspaceListItem"
    KubeconfigSecretResponse:
      type: object
      required:
        - name
        - namespace
      properties:
        name:
          type: string
        namespace:
          type: string
    DeleteKubeconfigSecretRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
    ListKubeconfigSecretsRequest:
      type: object
      properties:
        limit:
          type: integer
          format: int64
          minimum: 1
          maximum: 250
          default: 25
        continueToken:
          type: string
    ListKubeconfigSecretsResponse:
      type: object
      required:
        - continueToken
        - secrets
      properties:
        continueToken:
          type: string
        secrets:
          type: array
          items:
            $ref: "#/components/schemas/KubeconfigSecretResponse"
    WorkspaceReference:
      type: object
      required:
        - name
        - namespace
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
    # Helm Module Schemas
    ModuleSpecHelmChartRepoAuth:
      type: object
      required:
        - name
        - namespace
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
    ModuleSpecHelmChartRepo:
      type: object
      required:
        - url
        - chart
      properties:
        url:
          type: string
          minLength: 1
          description: Helm repository URL
        chart:
          type: string
          minLength: 1
          description: Chart name
        version:
          type: string
          description: Chart version
        auth:
          $ref: "#/components/schemas/ModuleSpecHelmChartRepoAuth"
    ModuleSpecHelmChartConfigMap:
      type: object
      required:
        - name
        - namespace
        - key
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
        key:
          type: string
          minLength: 1
          default: chart.tgz
    ModuleSpecHelmChartGitAuthSecret:
      type: object
      required:
        - name
        - namespace
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
    ModuleSpecHelmChartGitAuth:
      type: object
      properties:
        httpsSecretRef:
          $ref: "#/components/schemas/ModuleSpecHelmChartGitAuthSecret"
    ModuleSpecHelmChartGit:
      type: object
      required:
        - repo
        - path
        - revision
      properties:
        repo:
          type: string
          minLength: 1
          description: Git repository URL (https or ssh)
        path:
          type: string
          minLength: 1
          default: /
          description: Path to the chart directory containing Chart.yaml
        revision:
          type: string
          minLength: 1
          default: main
          description: Git revision (branch, tag)
        auth:
          $ref: "#/components/schemas/ModuleSpecHelmChartGitAuth"
    ModuleSpecHelmChart:
      type: object
      properties:
        repo:
          $ref: "#/components/schemas/ModuleSpecHelmChartRepo"
        configMap:
          $ref: "#/components/schemas/ModuleSpecHelmChartConfigMap"
        git:
          $ref: "#/components/schemas/ModuleSpecHelmChartGit"
    ModuleSpecHelmExistingRelease:
      type: object
      required:
        - name
        - namespace
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
    ModuleSpecHelmValuesConfigMap:
      type: object
      required:
        - name
        - namespace
        - key
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
        key:
          type: string
          minLength: 1
          default: values.yaml
    ModuleSpecHelmValues:
      type: object
      properties:
        file:
          type: string
          description: Path to values file
        configMap:
          $ref: "#/components/schemas/ModuleSpecHelmValuesConfigMap"
        raw:
          type: object
          additionalProperties: true
          description: Raw Helm values
    ModuleSpecHelmOutputValueFromSecret:
      type: object
      required:
        - name
        - namespace
        - key
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
        key:
          type: string
          minLength: 1
    ModuleSpecHelmOutputValueFrom:
      type: object
      properties:
        secret:
          $ref: "#/components/schemas/ModuleSpecHelmOutputValueFromSecret"
    ModuleSpecHelmOutput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
        value:
          description: Direct output value
        valueFrom:
          $ref: "#/components/schemas/ModuleSpecHelmOutputValueFrom"
    ModuleSpecHelmCleanup:
      type: object
      properties:
        removeNamespace:
          type: boolean
          default: false
        removePVCs:
          type: boolean
          default: false
    ModuleSpecHelmMigration:
      type: object
      properties:
        pvcs:
          type: array
          items:
            type: string
        configMaps:
          type: array
          items:
            type: string
        secrets:
          type: array
          items:
            type: string
    ModuleSpecHelm:
      type: object
      required:
        - chart
        - namespace
        - cleanup
        - migration
      properties:
        existingRelease:
          $ref: "#/components/schemas/ModuleSpecHelmExistingRelease"
        chart:
          $ref: "#/components/schemas/ModuleSpecHelmChart"
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          default: default
          description: DNS 1123 label - Namespace for Helm release
        values:
          type: array
          items:
            $ref: "#/components/schemas/ModuleSpecHelmValues"
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/ModuleSpecHelmOutput"
        cleanup:
          $ref: "#/components/schemas/ModuleSpecHelmCleanup"
        migration:
          $ref: "#/components/schemas/ModuleSpecHelmMigration"
    # Custom Module Schemas
    ModuleSpecCustom:
      type: object
      required:
        - image
      properties:
        image:
          type: string
          minLength: 1
          description: Container image
        imagePullSecrets:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            type: string
            enum: [workspace, controller]
    # Config Schema Types
    ConfigItemSpecInteger:
      type: object
      properties:
        required:
          type: boolean
          default: false
        default:
          type: integer
          default: 0
        min:
          type: integer
        max:
          type: integer
        editable:
          type: boolean
          default: true
    ConfigItemSpecBoolean:
      type: object
      properties:
        required:
          type: boolean
          default: false
        default:
          type: boolean
          default: false
        editable:
          type: boolean
          default: true
    ConfigItemSpecString:
      type: object
      properties:
        required:
          type: boolean
          default: false
        default:
          type: string
          default: ""
        regex:
          type: string
        editable:
          type: boolean
          default: true
    ConfigItemSpecOption:
      type: object
      required:
        - values
      properties:
        required:
          type: boolean
          default: false
        default:
          type: string
          default: ""
        values:
          type: array
          items:
            type: string
          minItems: 1
        editable:
          type: boolean
          default: true
    ConfigItemSpecMultipleOptions:
      type: object
      required:
        - values
      properties:
        required:
          type: boolean
          default: false
        default:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            type: string
          minItems: 1
        min:
          type: integer
        max:
          type: integer
        editable:
          type: boolean
          default: true
    ConfigItem:
      type: object
      required:
        - name
        - alias
      properties:
        name:
          type: string
          minLength: 1
        alias:
          type: string
          minLength: 1
        integer:
          $ref: "#/components/schemas/ConfigItemSpecInteger"
        boolean:
          $ref: "#/components/schemas/ConfigItemSpecBoolean"
        string:
          $ref: "#/components/schemas/ConfigItemSpecString"
        option:
          $ref: "#/components/schemas/ConfigItemSpecOption"
        multipleOptions:
          $ref: "#/components/schemas/ConfigItemSpecMultipleOptions"
    CreateModuleRequest:
      type: object
      required:
        - name
        - workspace
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
        workspace:
          $ref: "#/components/schemas/WorkspaceReference"
        helm:
          $ref: "#/components/schemas/ModuleSpecHelm"
        custom:
          $ref: "#/components/schemas/ModuleSpecCustom"
        config:
          type: object
          additionalProperties: true
          description: Configuration values
        configSchema:
          type: array
          items:
            $ref: "#/components/schemas/ConfigItem"
          description: Configuration schema definition
        hibernated:
          type: boolean
          default: false
    UpdateModuleRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
        hibernated:
          type: boolean
    DeleteModuleRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          maxLength: 253
          description: DNS 1123 subdomain
        namespace:
          type: string
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          maxLength: 63
          description: DNS 1123 label
    ListModulesRequest:
      type: object
      properties:
        limit:
          type: integer
          format: int64
          minimum: 1
          maximum: 250
          default: 25
        continueToken:
          type: string
    ModuleResponse:
      type: object
      required:
        - name
        - namespace
      properties:
        name:
          type: string
        namespace:
          type: string
    ModuleListItem:
      type: object
      required:
        - name
        - namespace
        - phase
        - message
        - hibernated
      properties:
        name:
          type: string
        namespace:
          type: string
        phase:
          type: string
        message:
          type: string
        hibernated:
          type: boolean
    ListModulesResponse:
      type: object
      required:
        - continueToken
        - modules
      properties:
        continueToken:
          type: string
        modules:
          type: array
          items:
            $ref: "#/components/schemas/ModuleListItem"
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Response"
              - type: object
                properties:
                  error:
                    allOf:
                      - $ref: "#/components/schemas/JSONErrorResponse"
                      - type: object
                        properties:
                          code:
                            type: string
                            enum:
                              [
                                bad_request,
                                malformed_json_body,
                                body_validation,
                                query_validation,
                              ]
    UnsupportedMediaType:
      description: Unsupported media type
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Response"
              - type: object
                properties:
                  error:
                    allOf:
                      - $ref: "#/components/schemas/JSONErrorResponse"
                      - type: object
                        properties:
                          code:
                            type: string
                            enum: [unsupported_media_type]
                          data:
                            type: string
    FormDataTooLarge:
      description: Form data too large
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Response"
              - type: object
                properties:
                  error:
                    allOf:
                      - $ref: "#/components/schemas/JSONErrorResponse"
                      - type: object
                        properties:
                          code:
                            type: string
                            enum: [form_data_too_large]
                          data:
                            type: string
